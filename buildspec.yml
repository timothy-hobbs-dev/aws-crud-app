version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      # Validate environment variables
      - |
        if [ -z "$ECR_REPOSITORY_NAME" ]; then
          echo "ERROR: ECR_REPOSITORY_NAME environment variable is not set"
          exit 1
        fi
      - |
        if [ -z "$AWS_DEFAULT_REGION" ]; then
          echo "ERROR: AWS_DEFAULT_REGION environment variable is not set"
          exit 1
        fi
      - |
        if [ -z "$AWS_ACCOUNT_ID" ]; then
          echo "ERROR: AWS_ACCOUNT_ID environment variable is not set"
          exit 1
        fi
      # Set and verify repository URI
      - export REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME
      - echo "Repository URI = ${REPOSITORY_URI}"
      # Login to ECR
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      # Set image tag
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      # Verify ECR repository exists
      - aws ecr describe-repositories --repository-names ${ECR_REPOSITORY_NAME} || aws ecr create-repository --repository-name ${ECR_REPOSITORY_NAME}
  build:
    commands:
      - echo Build started on `date`
      - echo Building Docker image with tag ${REPOSITORY_URI}:latest
      - docker build -t ${REPOSITORY_URI}:latest .
      - docker tag ${REPOSITORY_URI}:latest ${REPOSITORY_URI}:${IMAGE_TAG}
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing Docker image with tag ${REPOSITORY_URI}:latest
      - docker push ${REPOSITORY_URI}:latest
      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME ${REPOSITORY_URI}:${IMAGE_TAG} > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
